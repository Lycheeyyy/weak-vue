{"code":"import { isObject, isArray, isIntegerKey, extend, hasOwn, hasChange, } from \"../../shared/src\";\nimport { reactive, readonly } from \"./reactivity\";\nimport { Track, trigger } from \"./effect\";\n// 代理-获取get()配置\nfunction createGetter(isReadonly = false, shallow = false) {\n    return function get(target, key, receiver) {\n        // proxy一般和Reflect反射使用，用于拿到目标对象中的某个属性\n        //target——原始目标对象（被代理的那一个）\n        //key——当前访问的属性名\n        //receiver——触发该操作的代理对象本身\n        const res = Reflect.get(target, key, receiver); // 相当于target[key]，但Reflect.get() 方法可以处理更复杂的情况\n        // 判断\n        if (!isReadonly) {\n            // 不是只读则收集依赖（三个参数为代理的变量/对象，对该变量做的操作（增删改等），操作对应的属性）\n            Track(target, 0 /* TrackOpType.GET */, key);\n        }\n        if (shallow) {\n            // 如果只是浅层处理，直接返回浅层代理处理即可，否则继续向下递归\n            return res;\n        }\n        // 如果是一个对象，递归处理。\n        // 这里有一个优化处理，判断子对象是否只读，防止没必要的代理，即懒代理处理。————面试题之一\n        //懒代理：只有在访问某个对象的属性值的时候，才对这个属性值进行代理处理，而不是在一开始就全部代理\n        if (isObject(res)) {\n            return isReadonly ? readonly(res) : reactive(res);\n        }\n        return res;\n    };\n}\nconst get = createGetter(); // 不是只读，是深度代理\nconst shallowGet = createGetter(false, true); // 不是只读，是浅代理\nconst readonlyGet = createGetter(true, true); // 只读，深度\nconst shallowReadonlyGet = createGetter(true, true); // 只读，浅层\n// 代理-获取set()配置\nfunction createSetter(shallow = false) {\n    //proxy监听到对target[key]=value的操作\n    return function set(target, key, value, receiver) {\n        //(1)获取老值\n        const oldValue = target[key];\n        //(2)判断target是数组还是对象，此时target已经是被代理过的对象了，所以要另写方法判断\n        // 如果是数组，key的位置小于target.length，说明是修改值；如果是对象，则直接用hasOwn方法判断\n        let hasKey = (isArray(target) && isIntegerKey(key))\n            //as unknown as boolean是ts的一种双重类型断言，用于强制将某个表达式转换为boolean类型\n            ? Number(key) < target.length\n            : hasOwn(target, key);\n        //3）设置新值\n        const res = Reflect.set(target, key, value, receiver); // 获取最新的值，相当于target[key] = value\n        //(4)触发更新\n        if (!hasKey) {\n            // 此时说明是新增\n            trigger(target, 0 /* TriggerOpType.ADD */, key, value);\n        }\n        else if (hasChange(value, oldValue)) {\n            // 修改的时候，要去判断新值和旧值是否相同\n            trigger(target, 1 /* TriggerOpType.SET */, key, value, oldValue);\n        }\n        return res;\n    };\n}\nconst set = createSetter(); // 深层响应式 set\nconst shallowSet = createSetter(true); // 浅层响应式 set\n// 代理-readonly只读情况下的set()配置\n// 只读属性里面也可以写set方法，但这个 set 方法的目的是为了拦截和阻止写操作，而不是执行赋值操作。（不是不写 set，而是要写一个“拦截并阻止”的 set。）\nconst readonlyObj = {\n    set: (target, key, value) => {\n        console.warn(`set ${target} on key ${key} is failed`); //提示警告而不做任何操作，是保护措施\n    },\n};\nexport const reactiveHandlers = {\n    get,\n    set,\n};\nexport const shallowReactiveHandlers = {\n    get: shallowGet,\n    set: shallowSet,\n};\n//extend是一个对象合并工具函数,浅拷贝合并函数（类似 Object.assign）\nexport const readonlyHandlers = extend(//把 readonlyGet 和 readonlyObj 中的内容合并成一个新的对象，作为 readonly 的代理 handler 配置。\n{\n    get: readonlyGet,\n}, readonlyObj);\nexport const shallowReadonlyHandlers = extend({\n    get: shallowReadonlyGet,\n}, readonlyObj);\n//# sourceMappingURL=baseHandlers.js.map","references":["D:/mini-vue-main/weak-vue/packages/shared/src/index.ts","D:/mini-vue-main/weak-vue/packages/reactivity/src/reactivity.ts","D:/mini-vue-main/weak-vue/packages/reactivity/src/operations.ts","D:/mini-vue-main/weak-vue/packages/reactivity/src/effect.ts"],"map":"{\"version\":3,\"file\":\"baseHandlers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../packages/reactivity/src/baseHandlers.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"D:/mini-vue-main/weak-vue/node_modules/.cache/rollup-plugin-typescript2/placeholder/reactivity/src/baseHandlers.d.ts","writeByteOrderMark":false,"text":"export declare const reactiveHandlers: {\n    get: (target: any, key: any, receiver: any) => any;\n    set: (target: any, key: any, value: any, receiver: any) => boolean;\n};\nexport declare const shallowReactiveHandlers: {\n    get: (target: any, key: any, receiver: any) => any;\n    set: (target: any, key: any, value: any, receiver: any) => boolean;\n};\nexport declare const readonlyHandlers: {\n    get: (target: any, key: any, receiver: any) => any;\n} & {\n    set: (target: any, key: any, value: any) => void;\n};\nexport declare const shallowReadonlyHandlers: {\n    get: (target: any, key: any, receiver: any) => any;\n} & {\n    set: (target: any, key: any, value: any) => void;\n};\n"}}
