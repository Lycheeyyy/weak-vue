{"code":"import { isArray, isIntegerKey } from \"@vue/shared\";\n//import { TriggerOpType } from \"./operations\";\nlet uid = 0;\nlet activeEffect; // 保存当前的effect\nconst effectStack = []; // 用一个栈来保存所有的effect\n//effect是一个高阶函数，同时也是一个和每个 fn 一一对应的对象，这个对象上面有很多属性，比如 id（唯一标识）、_isEffect（私有属性，区分是不是响应式的 effect）、raw（保存用户的方法）、options（保存用户的 effect 配置）\nfunction createReactEffect(fn, options) {\n    // effect是一个高阶函数\n    const effect = function reactiveEffect() {\n        // 确保effect唯一性\n        //检查当前effect是否已在栈中（防止循环依赖）\n        if (!effectStack.includes(effect)) {\n            try {\n                // 入栈，将activeEffect设置为当前的effect\n                effectStack.push(effect);\n                activeEffect = effect;\n                fn(); // 执行用户的方法\n            }\n            finally {\n                // 不管如何都会执行里面的方法，不论成功或者失败\n                // 出栈，将当前的effect改为栈顶\n                effectStack.pop();\n                activeEffect = effectStack[effectStack.length - 1];\n            }\n        }\n    };\n    // effect也是一个对象\n    effect.id = uid++; // 区分effect\n    effect._isEffect = true; // 区分effect是不是响应式的effect\n    effect.raw = fn; // 保存用户的方法\n    //effect.options是用于存储副作用函数（effect）配置选项的内部属性\n    effect.options = options; // 保存用户的effect配置\n    activeEffect = effect;\n    return effect;\n}\nlet targetMap = new WeakMap(); //存储所有的target对象和各自的Map的映射关系\n//targetMap中的 key为一个target对象，value为依赖 Map\n//实现target=>Map（key=>Set(n) {effect1, effect2, ..., effectn}）这种结构\nexport function Track(target, type, key) {\n    if (activeEffect === undefined) {\n        // 说明没有在effect中使用（变量不是响应式或者变量不存在）\n        return;\n    }\n    //借助 targetMap，可以拿到每个 target 对象的依赖 Map，如果该依赖 Map 不存在则新插入一个\n    let depMap = targetMap.get(target);\n    if (!depMap) {\n        targetMap.set(target, (depMap = new Map()));\n    }\n    //depMap 是一个依赖 map，它的 key 为 target 对象中的每个属性 key，value 为每个属性涉及的所有不重复 effect。可以借助 depMap 拿到每个属性 key 的所有 effect 的 Set 结构，如果该 Set 不存在则新建一个：\n    let dep = depMap.get(key);\n    if (!dep) {\n        // 没有属性\n        depMap.set(key, (dep = new Set()));\n    }\n    //拿到属性 key 的所有 effect 之后，可以去判断 activeEffect 是否已经在其中，没有则插入，实现 effect 依赖的收集：\n    if (!dep.has(activeEffect)) {\n        dep.add(activeEffect);\n    }\n    console.log(targetMap);\n}\nexport function effect(fn, options = {}) {\n    //options: any = {}表示：options是一个任意类型的参数（any），默认值是一个空对象\n    // 对于每个fn，都能创建自己的effect\n    const effect = createReactEffect(fn, options);\n    // 判断一下\n    //非lazy模式立即执行\n    if (!options.lazy) {\n        effect(); // 默认执行\n    }\n    return effect;\n}\n// 触发更新\nexport function trigger(target, type, key, newValue, oldValue) {\n    //console.log(target, type, key, newValue, oldValue);\n    // 获取对应的effect\n    const depMap = targetMap.get(target);\n    if (!depMap) {\n        return; //如果这个对象还没有被收集依赖，就不需要触发任何副作用\n    }\n    const effects = depMap.get(key); //获取该key对应的effects集合，effects 是一个 Set，其中包含了所有依赖这个属性的 effect 函数。\n    // 不重复执行effect\n    //为什么要去重？因为有些 effect 函数可能同时依赖多个属性，避免重复执行。\n    //Set结构有天然去重特性，如果你尝试往一个 Set 中添加重复的内容，它不会报错，但也不会真正插入第二次\n    let effectSet = new Set(); //用于存放所有要执行的 effect\n    const addEffect = (effects) => {\n        if (effects) {\n            effects.forEach((effect) => effectSet.add(effect));\n        }\n    };\n    addEffect(effects);\n    effectSet.forEach((effect) => effect()); //(effect: any) => effect()：箭头函数，表示“拿到每个 effect 后执行它”\n    // 对数组进行特殊处理，改变的key为length时(即直接修改数组的长度)时，要触发其它key的effect，否则其它key的effect不会被触发的，始终是旧的结果\n    if (isArray(target) && key === \"length\") {\n        depMap.forEach((dep, key) => {\n            // 此时拿到depMap包含target对象所有key（包含'length'等属性以及所有下标'0'、'1'等等）的所有涉及effect\n            // 如果下标key大于等于新的长度值，则要执行length的effect和超出length的那些key的effect（再去执行指的是比如刚开始拿到state.list[100]，\n            // 现在将state.list.length直接改为1，重新触发state.list[100]这个语句，无法在内存中找到所以显示undefined）\n            if (key === \"length\" || key >= newValue) { //如果这个副作用依赖于length，或者依赖的 key（数字索引）大于等于新的 length，也要重新执行。\n                addEffect(dep); //把受影响的依赖 effect 收集起来,方便下面一块操作\n            }\n        });\n    }\n    else {\n        // 数组或对象都会进行的正常操作\n        if (key !== undefined) {\n            const effects = depMap.get(key);\n            addEffect(effects);\n        }\n        switch (type) {\n            case TriggerOpType.ADD: //表示新增属性的操作\n                // 针对的是通过下标给数组不存在的key赋值，从而改变数组的长度的情况，此时要额外触发\"length\"的effect\n                //情况举例：const arr = [1, 2];  // 初始长度是 2\n                //arr[5] = 100;\n                //console.log(arr);        // [1, 2, <3 empty items>, 100]\n                //console.log(arr.length); // 👉 6\n                //稀疏数组，自动填补中间的空位\n                if (isArray(target) && isIntegerKey(key)) {\n                    addEffect(depMap.get(\"length\")); //收集并准备执行所有依赖于 .length 的 effect。depMap里面是一对属性和他们对应的依赖，需要在里面找出依赖于length的并执行（addEffect函数里面本身就可以执行）\n                }\n        }\n    }\n}\n//# sourceMappingURL=effect.js.map","references":["D:/mini-vue-main/weak-vue/node_modules/.pnpm/@vue+shared@3.5.14/node_modules/@vue/shared/dist/shared.d.ts"],"map":"{\"version\":3,\"file\":\"effect.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../packages/reactivity/src/effect.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"D:/mini-vue-main/weak-vue/node_modules/.cache/rollup-plugin-typescript2/placeholder/reactivity/src/effect.d.ts","writeByteOrderMark":false,"text":"export declare function Track(target: any, type: any, key: any): void;\nexport declare function effect(fn: any, options?: any): {\n    (): void;\n    id: number;\n    _isEffect: boolean;\n    raw: any;\n    options: any;\n};\nexport declare function trigger(target: any, type: any, key?: any, newValue?: any, oldValue?: any): void;\n"}}
